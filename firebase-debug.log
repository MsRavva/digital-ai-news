[debug] [2025-04-15T16:14:07.344Z] ----------------------------------------------------------------------
[debug] [2025-04-15T16:14:07.346Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Ravva\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2025-04-15T16:14:07.346Z] CLI Version:   14.1.0
[debug] [2025-04-15T16:14:07.346Z] Platform:      win32
[debug] [2025-04-15T16:14:07.346Z] Node Version:  v22.13.1
[debug] [2025-04-15T16:14:07.346Z] Time:          Tue Apr 15 2025 19:14:07 GMT+0300 (Москва, стандартное время)
[debug] [2025-04-15T16:14:07.346Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-04-15T16:14:07.350Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-04-15T16:14:07.350Z] > authorizing via signed-in user (alexey.stenin@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\Ravva\ai-news

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2025-04-15T16:14:35.695Z] Checked if tokens are valid: true, expires at: 1744737180638
[debug] [2025-04-15T16:14:35.696Z] Checked if tokens are valid: true, expires at: 1744737180638
[debug] [2025-04-15T16:14:35.696Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=100
[debug] [2025-04-15T16:14:36.478Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2025-04-15T16:14:36.478Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[info] i  Using project digital-ai-news (digital-ai-news) 
[info] 
=== Dataconnect Setup
[debug] [2025-04-15T16:14:40.274Z] Checked if tokens are valid: true, expires at: 1744737180638
[debug] [2025-04-15T16:14:40.274Z] Checked if tokens are valid: true, expires at: 1744737180638
[debug] [2025-04-15T16:14:40.274Z] >>> [apiv2][query] GET https://cloudbilling.googleapis.com/v1/projects/digital-ai-news/billingInfo [none]
[debug] [2025-04-15T16:14:41.447Z] <<< [apiv2][status] GET https://cloudbilling.googleapis.com/v1/projects/digital-ai-news/billingInfo 200
[debug] [2025-04-15T16:14:41.447Z] <<< [apiv2][body] GET https://cloudbilling.googleapis.com/v1/projects/digital-ai-news/billingInfo {"name":"projects/digital-ai-news/billingInfo","projectId":"digital-ai-news","billingAccountName":"","billingEnabled":false}
[info] i  dataconnect: ensuring required API sqladmin.googleapis.com is enabled... 
[debug] [2025-04-15T16:14:41.447Z] Checked if tokens are valid: true, expires at: 1744737180638
[debug] [2025-04-15T16:14:41.447Z] Checked if tokens are valid: true, expires at: 1744737180638
[debug] [2025-04-15T16:14:41.447Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/digital-ai-news/services/sqladmin.googleapis.com [none]
[debug] [2025-04-15T16:14:41.447Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/digital-ai-news/services/sqladmin.googleapis.com x-goog-quota-user=projects/digital-ai-news
[debug] [2025-04-15T16:14:42.708Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/digital-ai-news/services/sqladmin.googleapis.com 200
[debug] [2025-04-15T16:14:42.708Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/digital-ai-news/services/sqladmin.googleapis.com [omitted]
[info] +  dataconnect: required API sqladmin.googleapis.com is enabled 
[info] +  Wrote dataconnect\dataconnect.yaml 
[info] +  Wrote dataconnect\schema\schema.gql 
[info] +  Wrote dataconnect\connector\connector.yaml 
[info] +  Wrote dataconnect\connector\queries.gql 
[info] +  Wrote dataconnect\connector\mutations.gql 
[info] +  Detected WEB app in directory C:\Users\Ravva\ai-news 
[info] i  Detected react app. Enabling react generated SDKs. 
[info] i  Writing your new SDK configuration to C:\Users\Ravva\ai-news\dataconnect\connector/connector.yaml 
[info] i  Skipping write of dataconnect\connector\connector.yaml 
[info] i  dataconnect: downloading dataconnect-emulator-2.1.0.exe... {"metadata":{"emulator":{"name":"dataconnect"},"message":"downloading dataconnect-emulator-2.1.0.exe..."}}
[debug] [2025-04-15T16:16:06.107Z] >>> [apiv2][query] GET https://storage.googleapis.com/firemat-preview-drop/emulator/dataconnect-emulator-windows-v2.1.0 
[debug] [2025-04-15T16:16:06.543Z] <<< [apiv2][status] GET https://storage.googleapis.com/firemat-preview-drop/emulator/dataconnect-emulator-windows-v2.1.0 200
[debug] [2025-04-15T16:16:06.543Z] <<< [apiv2][body] GET https://storage.googleapis.com/firemat-preview-drop/emulator/dataconnect-emulator-windows-v2.1.0 [stream]
[debug] [2025-04-15T16:16:08.181Z] defaultcredentials: writing to file C:\Users\Ravva\AppData\Roaming\firebase\alexey_stenin_gmail.com_application_default_credentials.json
[debug] [2025-04-15T16:16:08.182Z] Setting GAC to C:\Users\Ravva\AppData\Roaming\firebase\alexey_stenin_gmail.com_application_default_credentials.json {"metadata":{"emulator":{"name":"dataconnect"},"message":"Setting GAC to C:\\Users\\Ravva\\AppData\\Roaming\\firebase\\alexey_stenin_gmail.com_application_default_credentials.json"}}
[info] I0415 19:16:08.269339   10664 generate.go:40] Generated all sources. Writing them to disk...

[info] i  Generated SDK code for default 
[info] i  Visit https://firebase.google.com/docs/data-connect/web-sdk#react for more information on how to set up React Generated SDKs for Firebase Data Connect 
[info] i  Run `npm i --save @angular/fire @tanstack-query-firebase/angular @tanstack/angular-query-experimental` to install angular sdk dependencies.
Visit https://github.com/invertase/tanstack-query-firebase/tree/main/packages/angular for more information on how to set up Angular Generated SDKs for Firebase Data Connect 
[info] +  If you'd like to add more generated SDKs to your app your later, run firebase init dataconnect:sdk again 
[info] i  If you'd like to provision a CloudSQL Postgres instance on the Firebase Data Connect no-cost trial:
1. Please upgrade to the pay-as-you-go (Blaze) billing plan. Visit the following page:
     https://console.firebase.google.com/project/digital-ai-news/usage/details
2. Run firebase init dataconnect again to configure the Cloud SQL instance.
3. Run firebase deploy --only dataconnect to deploy your Data Connect service. 
[info] 
=== Firestore Setup
[debug] [2025-04-15T16:16:08.312Z] Checked if tokens are valid: true, expires at: 1744737180638
[debug] [2025-04-15T16:16:08.312Z] Checked if tokens are valid: true, expires at: 1744737180638
[debug] [2025-04-15T16:16:08.312Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/digital-ai-news/services/firestore.googleapis.com [none]
[debug] [2025-04-15T16:16:08.312Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/digital-ai-news/services/firestore.googleapis.com x-goog-quota-user=projects/digital-ai-news
[debug] [2025-04-15T16:16:09.473Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/digital-ai-news/services/firestore.googleapis.com 200
[debug] [2025-04-15T16:16:09.473Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/digital-ai-news/services/firestore.googleapis.com [omitted]
[debug] [2025-04-15T16:16:09.473Z] Checked if tokens are valid: true, expires at: 1744737180638
[debug] [2025-04-15T16:16:09.473Z] Checked if tokens are valid: true, expires at: 1744737180638
[debug] [2025-04-15T16:16:09.473Z] >>> [apiv2][query] GET https://firestore.googleapis.com/v1/projects/digital-ai-news/databases/(default) [none]
[debug] [2025-04-15T16:16:09.794Z] <<< [apiv2][status] GET https://firestore.googleapis.com/v1/projects/digital-ai-news/databases/(default) 200
[debug] [2025-04-15T16:16:09.794Z] <<< [apiv2][body] GET https://firestore.googleapis.com/v1/projects/digital-ai-news/databases/(default) {"name":"projects/digital-ai-news/databases/(default)","uid":"7fffa1a3-587c-4186-89bd-bcc3d58299ec","createTime":"2025-04-12T19:34:00.802430Z","updateTime":"2025-04-12T19:34:00.802430Z","locationId":"europe-north2","type":"FIRESTORE_NATIVE","concurrencyMode":"PESSIMISTIC","versionRetentionPeriod":"3600s","earliestVersionTime":"2025-04-15T15:15:17.823696Z","appEngineIntegrationMode":"DISABLED","pointInTimeRecoveryEnablement":"POINT_IN_TIME_RECOVERY_DISABLED","deleteProtectionState":"DELETE_PROTECTION_DISABLED","databaseEdition":"STANDARD","freeTier":true,"etag":"IOH66cu32owDMO39vdKe04wD"}
[debug] [2025-04-15T16:16:09.794Z] database_type: FIRESTORE_NATIVE
[debug] [2025-04-15T16:16:09.794Z] database_type: FIRESTORE_NATIVE
[debug] [2025-04-15T16:16:09.794Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-04-15T16:16:09.794Z] > authorizing via signed-in user (alexey.stenin@gmail.com)
[debug] [2025-04-15T16:16:09.794Z] [iam] checking project digital-ai-news for permissions ["firebase.projects.get"]
[debug] [2025-04-15T16:16:09.794Z] Checked if tokens are valid: true, expires at: 1744737180638
[debug] [2025-04-15T16:16:09.794Z] Checked if tokens are valid: true, expires at: 1744737180638
[debug] [2025-04-15T16:16:09.794Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/digital-ai-news:testIamPermissions [none]
[debug] [2025-04-15T16:16:09.794Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/digital-ai-news:testIamPermissions x-goog-quota-user=projects/digital-ai-news
[debug] [2025-04-15T16:16:09.794Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/digital-ai-news:testIamPermissions {"permissions":["firebase.projects.get"]}
[debug] [2025-04-15T16:16:10.761Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/digital-ai-news:testIamPermissions 200
[debug] [2025-04-15T16:16:10.761Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/digital-ai-news:testIamPermissions {"permissions":["firebase.projects.get"]}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
